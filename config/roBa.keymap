#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&sl { release-after-ms = <250>; };

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        hankaku_zenkaku {
            bindings = <&kp GRAVE>;
            key-positions = <0 1>;
        };

        tilde {
            bindings = <&kp PLUS>;
            key-positions = <8 9>;
        };

        exclamation {
            bindings = <&kp EXCLAMATION>;
            key-positions = <32 33>;
        };

        and {
            bindings = <&kp CARET>;
            key-positions = <18 19>;
        };

        or {
            bindings = <&kp LS(INT_YEN) >;
            key-positions = <19 20>;
        };

        capslock {
            bindings = <&kp LS(CAPSLOCK)>;
            key-positions = <10 22 34>;
        };

        insert {
            bindings = <&kp INSERT>;
            key-positions = <5 6>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl 4>;

            label = "MKP_EXIT_AML";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R             &kp T                                                        &kp Y        &kp U  &lt 5 I    &kp O    &kp P
&kp A             &kp S         &lt 4 D       &kp F             &kp G        &kp C_MUTE                       &none          &kp H        &kp J  &kp K      &kp L    &lt 4 SEMICOLON
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V             &kp B        &lt_to_layer_0 6 LC(W)           &none          &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &kp INT_MUHENKAN  &lt 2 SPACE  &lt_to_layer_0 3 INT_HENKAN      &kp BACKSPACE  &lt 1 ENTER                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        FUNCTION {
            bindings = <
&trans            &trans            &trans            &trans            &trans                                 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(NUMBER_5)  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans            &trans            &trans            &trans            &trans            &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans            &trans            &trans            &trans            &trans            &trans      &trans   &trans                          &kp F12
            >;
        };

        NUM {
            bindings = <
&kp DOUBLE_QUOTES                &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp COLON                          &kp LEFT_BRACKET     &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_BRACKET     &kp BACKSLASH
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS  &trans         &trans  &kp LS(INT_RO)  &kp HASH              &kp PERCENT            &kp INTERNATIONAL_3  &kp SINGLE_QUOTE
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp UNDERSCORE  &kp EQUAL      &trans  &trans          &kp AT_SIGN     &kp AMPERSAND       &kp DOLLAR           &kp INT_RO
&trans                      &trans           &trans           &trans           &trans     &trans         &trans  &trans                                                                            &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(PAGE_UP)         &kp UP_ARROW    &kp LC(PAGE_DOWN)        &trans                       &trans  &kp LC(LG(LEFT_ARROW))  &kp LG(UP_ARROW)    &kp LC(LG(RIGHT_ARROW))  &kp LC(LG(F4))
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &kp LG(LEFT_ARROW)      &kp LG(DOWN_ARROW)  &kp LG(RIGHT_ARROW)      &kp LC(LG(D))
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &kp LA(LEFT)            &kp LA(UP_ARROW)    &kp LA(RIGHT_ARROW)      &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                                                       &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
